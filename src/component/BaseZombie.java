package component;

import javafx.animation.KeyFrame;
import javafx.animation.Timeline;
import javafx.scene.image.ImageView;
import javafx.stage.Stage;
import javafx.scene.image.Image;
import javafx.util.Duration;
import javafx.application.Platform;
import main.GameApp;

public abstract class BaseZombie {
    protected int health;
    protected double speed;
    protected ImageView zombieImage;
    protected Timeline moveTimeline;
    protected boolean isAttacking = false;
    private Timeline attackTimer = null;
    private boolean isDead = false; // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏ï‡∏≤‡∏¢‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
    
    private Image[] walkFrames; // ‡πÄ‡∏Å‡πá‡∏ö‡∏†‡∏≤‡∏û‡πÄ‡∏î‡∏¥‡∏ô 4 ‡∏£‡∏π‡∏õ
    private int currentFrame = 0;
    private Timeline walkAnimation; // ‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏π‡∏õ‡∏Ç‡∏ì‡∏∞‡πÄ‡∏î‡∏¥‡∏ô

    public BaseZombie(String[] imagePaths, int x, int y, int health, double speed) {
        this.health = health;
        this.speed = speed;
        this.zombieImage = new ImageView();
        this.zombieImage.setFitWidth(40);
        this.zombieImage.setFitHeight(70);
        this.zombieImage.setX(x);
        this.zombieImage.setY(y);

        // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡πÄ‡∏î‡∏¥‡∏ô 4 ‡∏£‡∏π‡∏õ
        walkFrames = new Image[4];
        for (int i = 0; i < 4; i++) {
            walkFrames[i] = new Image(getClass().getResource(imagePaths[i]).toExternalForm());
        }
        this.zombieImage.setImage(walkFrames[0]); // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏µ‡πà‡∏£‡∏π‡∏õ‡πÅ‡∏£‡∏Å

        GameApp.gamePane.getChildren().add(zombieImage);

        // ‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Timeline ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏π‡∏õ‡∏Ç‡∏ì‡∏∞‡πÄ‡∏î‡∏¥‡∏ô
        walkAnimation = new Timeline(new KeyFrame(Duration.millis(200), e -> updateWalkFrame()));
        walkAnimation.setCycleCount(Timeline.INDEFINITE);
        walkAnimation.play();

        // ‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Timeline ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô
        moveTimeline = new Timeline(new KeyFrame(Duration.millis(100), e -> move()));
        moveTimeline.setCycleCount(Timeline.INDEFINITE);
        moveTimeline.play();
    }

    private void updateWalkFrame() {
        if (!isAttacking && !isDead) { // ‚úÖ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏π‡∏õ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏ô ‡πÅ‡∏•‡∏∞‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ï‡∏≤‡∏¢
            currentFrame = (currentFrame + 1) % 4;
            zombieImage.setImage(walkFrames[currentFrame]);
        }
    }

    public void move() {
        if (isDead) return; // ‚úÖ ‡∏ñ‡πâ‡∏≤‡∏ï‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà
        if (!isAttacking) {
            if (!walkAnimation.getStatus().equals(Timeline.Status.RUNNING)) {
                walkAnimation.play(); // ‚úÖ ‡πÄ‡∏î‡∏¥‡∏ô = ‡∏ß‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
            }

            if (checkCollisionWithPlants()) {
                isAttacking = true;
                walkAnimation.stop(); // ‚ùå ‡∏´‡∏¢‡∏∏‡∏î‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏π‡∏õ‡∏Ç‡∏ì‡∏∞‡πÇ‡∏à‡∏°‡∏ï‡∏µ
                attackPlant();
            } else {
                zombieImage.setX(zombieImage.getX() - speed);
            }
        }
    }

    private boolean checkCollisionWithPlants() {
        for (BasePlant plant : GameApp.plants) {
            double dx = Math.abs(zombieImage.getX() - plant.getImageView().getX());
            double dy = Math.abs(zombieImage.getY() - plant.getImageView().getY());

            if (dx < 50 && dy < 50) {
                return true;
            }
        }
        return false;
    }

    private void attackPlant() {
        if (isDead) return; // ‚úÖ ‡∏ñ‡πâ‡∏≤‡∏ï‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÇ‡∏à‡∏°‡∏ï‡∏µ

        if (attackTimer == null) {
            attackTimer = new Timeline(new KeyFrame(Duration.seconds(0.6), e -> {
                if (isDead) return; // ‚úÖ ‡πÄ‡∏ä‡πá‡∏Ñ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ß‡πà‡∏≤‡∏ï‡∏≤‡∏¢‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
                BasePlant targetPlant = null;

                for (BasePlant plant : GameApp.plants) {
                    double dx = Math.abs(zombieImage.getX() - plant.getImageView().getX());
                    double dy = Math.abs(zombieImage.getY() - plant.getImageView().getY());

                    if (dx < 50 && dy < 50) {
                        targetPlant = plant;
                        break;
                    }
                }

                if (targetPlant != null) {
                    // ‚úÖ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏†‡∏≤‡∏û‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡πÄ‡∏ü‡∏£‡∏° 0 ‡∏ï‡∏≠‡∏ô‡πÇ‡∏à‡∏°‡∏ï‡∏µ
                    zombieImage.setImage(walkFrames[0]); 

                    targetPlant.takeDamage(15);

                    if (targetPlant.getHealth() <= 0) {
                        GameApp.gamePane.getChildren().remove(targetPlant.getImageView());
                        GameApp.plants.remove(targetPlant);
                        isAttacking = false;
                        
                        // ‚úÖ ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÄ‡∏î‡∏¥‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏û‡∏∑‡∏ä‡∏ó‡∏µ‡πà‡πÇ‡∏à‡∏°‡∏ï‡∏µ‡∏ï‡∏≤‡∏¢
                        walkAnimation.play();
                        attackTimer.stop();
                        attackTimer = null;
                    }
                } else {
                    isAttacking = false;
                    
                    // ‚úÖ ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÄ‡∏î‡∏¥‡∏ô‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏û‡∏∑‡∏ä‡πÉ‡∏´‡πâ‡πÇ‡∏à‡∏°‡∏ï‡∏µ‡πÅ‡∏•‡πâ‡∏ß
                    walkAnimation.play();
                    attackTimer.stop();
                    attackTimer = null;
                }
            }));
            attackTimer.setCycleCount(Timeline.INDEFINITE);
            attackTimer.play();
        }
    }


    public void takeDamage(int damage) {
        if (isDead) return; // ‚úÖ ‡∏ñ‡πâ‡∏≤‡∏ï‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏î‡∏≤‡πÄ‡∏°‡∏à
        this.health -= damage;
//        System.out.println("üí• Zombie took " + damage + " damage, HP left: " + this.health);

        if (this.health <= 0) {
            die(); // ‚úÖ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏´‡πâ‡∏ï‡∏≤‡∏¢
        }
    }

    public void die() {
        if (isDead) return;
        isDead = true;

        Platform.runLater(() -> {
            GameApp.gamePane.getChildren().remove(zombieImage);
        });

        GameApp.zombies.remove(this);

        System.out.println("üíÄ Zombie defeated! +10 Energy");
        GameApp.increaseEnergy(10);

        // ‚úÖ ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ã‡∏≠‡∏°‡∏ö‡∏µ‡πâ‡∏ó‡∏µ‡πà‡∏ï‡∏≤‡∏¢
        GameApp.totalZombiesKilled++;

        // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ü‡πà‡∏≤‡∏Ñ‡∏£‡∏ö‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
        if (GameApp.totalZombiesKilled >= GameApp.TOTAL_ZOMBIES_TO_WIN) {
            // ‚úÖ ‡∏´‡∏≤ instance ‡∏Ç‡∏≠‡∏á GameApp ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏±‡∏ô‡∏≠‡∏¢‡∏π‡πà ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏£‡∏µ‡∏¢‡∏Å youWinScreen()
            Platform.runLater(() -> {
                Stage stage = (Stage) GameApp.gamePane.getScene().getWindow();
                GameApp gameAppInstance = (GameApp) stage.getUserData(); 
                if (gameAppInstance != null) {
                    gameAppInstance.youWinScreen(); 
                }
            });
        }
    }


    public ImageView getImageView() {
        return zombieImage;
    }

    public int getX() {
        return (int) zombieImage.getX();
    }

    public int getY() {
        return (int) zombieImage.getY();
    }
}